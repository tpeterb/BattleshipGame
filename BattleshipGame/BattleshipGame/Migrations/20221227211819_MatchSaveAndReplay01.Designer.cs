// <auto-generated />
using BattleshipGame.Repositories.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BattleshipGame.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20221227211819_MatchSaveAndReplay01")]
    partial class MatchSaveAndReplay01
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BattleshipGame.Repositories.Models.MatchSaveAndReplay", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NumberOfTurns")
                        .HasColumnType("int");

                    b.Property<string>("Player1CurrentShips")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Player1CurrentShipsType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Player1Guesses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Player1OriginalShips")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Player2CurrentShips")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Player2CurrentShipsType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Player2Guesses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Player2OriginalShips")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerName1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerName2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerToStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("matchSaveAndReplays");
                });

            modelBuilder.Entity("BattleshipGame.Repositories.Models.MatchScore", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NumberOfTurns")
                        .HasColumnType("int");

                    b.Property<string>("Player1Hits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Player2Hits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerName1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerName2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WinnerPlayerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("matchScores");
                });
#pragma warning restore 612, 618
        }
    }
}
